import * as React from "react";
import {tuple} from '../_utils/tools'
const allSvg = require('../../icons/sprite.svg');
const SvgNames = tuple(
    "add",
    "addCheck",
    "addFile",
    "alert",
    "ancore",
    "arrow-back",
    "arrow-backward",
    "arrow-double-reply",
    "arrow-down-cicle",
    "arrow-down-circle",
    "arrow-down-table",
    "arrow-down",
    "arrow-left-cicle",
    "arrow-left-circle",
    "arrow-next",
    "arrow-reply",
    "arrow-right-cicle",
    "arrow-swap",
    "arrow-up-cicle",
    "arrow-up-circle",
    "arrow-up",
    "arrowDown",
    "arrowLeft",
    "arrowLong",
    "arrowRight",
    "arrows-h",
    "arrows-v",
    "arrowUp",
    "arrowVerticalLeft",
    "arrowVerticalRight",
    "asteriks",
    "attachedFile",
    "backward",
    "bank",
    "bar-chart-h",
    "barChart",
    "barChartCheck",
    "base-server",
    "base",
    "big-grid-1",
    "big-grid",
    "binokulars",
    "block",
    "book-finance",
    "book-formula",
    "book-upload",
    "book-warning",
    "book",
    "branch",
    "breifcase",
    "bring-to-front",
    "bug",
    "building",
    "calculator",
    "calculatorCheck",
    "calendar-check",
    "calendar-delete",
    "calendar-minus",
    "calendar-plus",
    "calendar",
    "calendarFull",
    "camera",
    "caret-down",
    "caret-left",
    "caret-right",
    "caret-square-down",
    "caret-square-left",
    "caret-square-right",
    "caret-square-up",
    "caret-up",
    "chat-bubbles-question",
    "chat-dialog",
    "chat-help",
    "chat-off",
    "chat-warning",
    "chat",
    "checkbox",
    "checkboxDisabled",
    "checkboxFill",
    "checkStatus",
    "cicle",
    "circle-o",
    "clip",
    "clipboard",
    "clock",
    "close-menu",
    "close",
    "cloud-upload",
    "cloud",
    "cloudDownload",
    "cloudServer",
    "code-html",
    "code",
    "colorpicker",
    "comment",
    "compose",
    "connect",
    "contact",
    "cookies",
    "copy",
    "cub",
    "cut",
    "dark-theme",
    "data-histogram",
    "data-line",
    "date-scatter",
    "delete",
    "design",
    "desktop",
    "developer-board",
    "diagram",
    "diagramBlock",
    "diagramCircle",
    "directory",
    "disconnect",
    "document-list",
    "document",
    "documents",
    "dotted",
    "double-down",
    "double-up",
    "doubleLeft",
    "doubleRight",
    "download",
    "drag-and-drop",
    "drag",
    "dragAndDrop",
    "duplicate",
    "edit",
    "eject",
    "ellipsis",
    "email",
    "envelope-email-square",
    "erase",
    "eur",
    "exit",
    "exportFile",
    "external-link-square",
    "external-link",
    "fast-backward",
    "fast-forward",
    "fax",
    "file-ai",
    "file-delete",
    "file-download",
    "file-eps",
    "file-minus",
    "file-pdf",
    "file-png",
    "file-ppt",
    "file-search",
    "file-svg",
    "file-text",
    "file-upload",
    "file-xml",
    "file-zip",
    "file",
    "fileExcel",
    "files",
    "fileWord",
    "fill",
    "filter",
    "filterCheck",
    "flag",
    "flash",
    "folder-delete",
    "folder-download",
    "folder-minus",
    "folder-public",
    "folder-upload",
    "folder-zip",
    "folder",
    "folderAdd",
    "folderOpen",
    "form",
    "fort",
    "forward",
    "fullScreen",
    "fullScreenUnDo",
    "gbp",
    "gear",
    "gift",
    "globe",
    "graduation-cap",
    "hdd",
    "heart",
    "hide",
    "home",
    "hourglass",
    "image",
    "important",
    "importFile",
    "info",
    "journal",
    "key",
    "keyboard",
    "legend",
    "letter",
    "lightbulbt",
    "link-remove",
    "link",
    "list",
    "location-map",
    "location",
    "lock-open",
    "lock",
    "map-signs",
    "map",
    "mark",
    "menu-1",
    "menu-2",
    "menu-3",
    "menu-4",
    "menu-5",
    "menuOpen",
    "minus-circle",
    "minus-square",
    "minus",
    "money",
    "more",
    "move",
    "moveDown",
    "moveUp",
    "news",
    "note",
    "notebook",
    "notepad",
    "notification",
    "notificationOff",
    "open-folder",
    "pause-circle",
    "pause-filled",
    "pause",
    "percent",
    "person",
    "phone-1",
    "phone-desktop",
    "phone",
    "pin",
    "play-arrow",
    "play-filled",
    "play",
    "plus-square",
    "plus",
    "plus2",
    "plusBlock",
    "plusBlockCheck",
    "pointer",
    "power",
    "print",
    "qcode",
    "question",
    "question2",
    "radioButton",
    "radioButtonFill",
    "repeat",
    "rub",
    "rubbish",
    "save",
    "search-in",
    "search-out",
    "search",
    "searchCheck",
    "send",
    "sertificat",
    "server",
    "settings",
    "share",
    "show",
    "sing-up",
    "skale fit",
    "sort",
    "sortCheck",
    "speed",
    "spinner",
    "star",
    "starFull",
    "status",
    "stop-circle",
    "stop-filled",
    "success",
    "switchOff",
    "switchOn",
    "system-settings",
    "table-column",
    "table-rows",
    "table",
    "table2",
    "tablet",
    "tableUp",
    "tag",
    "tags",
    "target",
    "tasks",
    "team",
    "text-bullet-list-search",
    "text-bullet-list",
    "text-number-list",
    "tiles",
    "timer",
    "toolbox",
    "tools",
    "try",
    "undo",
    "update-clock",
    "update",
    "updateTwoLine",
    "upload",
    "usd",
    "user-add",
    "user-delete",
    "video-camera",
    "video-square",
    "warning- triangle",
    "warning",
    "wifi"
);
export type SvgName = typeof SvgNames[number];

const SizeTypes = tuple('xs', 's', 'm');
export type SizeType = typeof SizeTypes[number];

export interface IconProps {
    icon: SvgName;
    className?: string;
    style?;
    color?: string;
    size?: SizeType;
    customSize?: string;
}

interface CompoundedComponent
    extends React.ForwardRefExoticComponent<IconProps & React.RefAttributes<HTMLElement>> {}

const InternalIcon: React.ForwardRefRenderFunction<unknown, IconProps> = (props, ref) => {
    const {
        icon,
        className,
        color,
        size,
        customSize
    } = props;

    const newSize = (
        size === 'xs' ? '8' :
            size === 's' ? '12' :
                size === 'm' ? '24' :
                    customSize || undefined);

    return (
        <div
            className={className}
            style={{...props.style, cursor: "pointer", display: "inline-flex", alignItems: "center"}}
        >
            <svg width={newSize || "16"} height={newSize || "16"} viewBox="0 0 24 24" fill={color || '#293468'}>
                <use xlinkHref={`${allSvg}#${icon}`} />
            </svg>
        </div>
    )
};

const NeoIcon = React.forwardRef<unknown, IconProps>(InternalIcon) as CompoundedComponent;

NeoIcon.displayName = 'NeoIcon';

NeoIcon.defaultProps = {
};

export default NeoIcon
